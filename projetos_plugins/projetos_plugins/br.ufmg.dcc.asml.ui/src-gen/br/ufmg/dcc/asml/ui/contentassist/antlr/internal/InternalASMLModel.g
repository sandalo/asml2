/*
 * generated by Xtext
 */
grammar InternalASMLModel;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package br.ufmg.dcc.asml.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package br.ufmg.dcc.asml.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import br.ufmg.dcc.asml.services.ASMLModelGrammarAccess;

}

@parser::members {
 
 	private ASMLModelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ASMLModelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleASMLModel
entryRuleASMLModel 
:
{ before(grammarAccess.getASMLModelRule()); }
	 ruleASMLModel
{ after(grammarAccess.getASMLModelRule()); } 
	 EOF 
;

// Rule ASMLModel
ruleASMLModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASMLModelAccess().getGroup()); }
(rule__ASMLModel__Group__0)
{ after(grammarAccess.getASMLModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractComponent
entryRuleAbstractComponent 
:
{ before(grammarAccess.getAbstractComponentRule()); }
	 ruleAbstractComponent
{ after(grammarAccess.getAbstractComponentRule()); } 
	 EOF 
;

// Rule AbstractComponent
ruleAbstractComponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractComponentAccess().getAlternatives()); }
(rule__AbstractComponent__Alternatives)
{ after(grammarAccess.getAbstractComponentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleView
entryRuleView 
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewAccess().getGroup()); }
(rule__View__Group__0)
{ after(grammarAccess.getViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleClassMatching
entryRuleClassMatching 
:
{ before(grammarAccess.getClassMatchingRule()); }
	 ruleClassMatching
{ after(grammarAccess.getClassMatchingRule()); } 
	 EOF 
;

// Rule ClassMatching
ruleClassMatching
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMatchingAccess().getGroup()); }
(rule__ClassMatching__Group__0)
{ after(grammarAccess.getClassMatchingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetaModule
entryRuleMetaModule 
:
{ before(grammarAccess.getMetaModuleRule()); }
	 ruleMetaModule
{ after(grammarAccess.getMetaModuleRule()); } 
	 EOF 
;

// Rule MetaModule
ruleMetaModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup()); }
(rule__MetaModule__Group__0)
{ after(grammarAccess.getMetaModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRestriction
entryRuleRestriction 
:
{ before(grammarAccess.getRestrictionRule()); }
	 ruleRestriction
{ after(grammarAccess.getRestrictionRule()); } 
	 EOF 
;

// Rule Restriction
ruleRestriction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictionAccess().getGroup()); }
(rule__Restriction__Group__0)
{ after(grammarAccess.getRestrictionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentsBinRestrictionDeclareation
entryRuleComponentsBinRestrictionDeclareation 
:
{ before(grammarAccess.getComponentsBinRestrictionDeclareationRule()); }
	 ruleComponentsBinRestrictionDeclareation
{ after(grammarAccess.getComponentsBinRestrictionDeclareationRule()); } 
	 EOF 
;

// Rule ComponentsBinRestrictionDeclareation
ruleComponentsBinRestrictionDeclareation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getGroup()); }
(rule__ComponentsBinRestrictionDeclareation__Group__0)
{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule ExpressionMatchingClause
ruleExpressionMatchingClause
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMatchingClauseAccess().getAlternatives()); }
(rule__ExpressionMatchingClause__Alternatives)
{ after(grammarAccess.getExpressionMatchingClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ModuleMatchingParamenter
ruleModuleMatchingParamenter
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleMatchingParamenterAccess().getAlternatives()); }
(rule__ModuleMatchingParamenter__Alternatives)
{ after(grammarAccess.getModuleMatchingParamenterAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GroupClause
ruleGroupClause
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupClauseAccess().getAlternatives()); }
(rule__GroupClause__Alternatives)
{ after(grammarAccess.getGroupClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PermissionClause
rulePermissionClause
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPermissionClauseAccess().getAlternatives()); }
(rule__PermissionClause__Alternatives)
{ after(grammarAccess.getPermissionClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelactionType
ruleRelactionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelactionTypeAccess().getAlternatives()); }
(rule__RelactionType__Alternatives)
{ after(grammarAccess.getRelactionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule WildCard
ruleWildCard
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildCardAccess().getAlternatives()); }
(rule__WildCard__Alternatives)
{ after(grammarAccess.getWildCardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__AbstractComponent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractComponentAccess().getMetaModuleParserRuleCall_0()); }
	ruleMetaModule
{ after(grammarAccess.getAbstractComponentAccess().getMetaModuleParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractComponentAccess().getViewParserRuleCall_1()); }
	ruleView
{ after(grammarAccess.getAbstractComponentAccess().getViewParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ExpressionMatchingClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionMatchingClauseAccess().getNAME_START_WITHEnumLiteralDeclaration_0()); }
(	'name start with' 
)
{ after(grammarAccess.getExpressionMatchingClauseAccess().getNAME_START_WITHEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExpressionMatchingClauseAccess().getNAME_ENDS_WITHEnumLiteralDeclaration_1()); }
(	'name ends with' 
)
{ after(grammarAccess.getExpressionMatchingClauseAccess().getNAME_ENDS_WITHEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getExpressionMatchingClauseAccess().getANNOTATED_WITHEnumLiteralDeclaration_2()); }
(	'annotated with' 
)
{ after(grammarAccess.getExpressionMatchingClauseAccess().getANNOTATED_WITHEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleMatchingParamenter__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleMatchingParamenterAccess().getPAKCAGEEnumLiteralDeclaration_0()); }
(	'by package name' 
)
{ after(grammarAccess.getModuleMatchingParamenterAccess().getPAKCAGEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getModuleMatchingParamenterAccess().getFOLDEREnumLiteralDeclaration_1()); }
(	'by folder name' 
)
{ after(grammarAccess.getModuleMatchingParamenterAccess().getFOLDEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getModuleMatchingParamenterAccess().getPAKCAGE_AND_FOLDEREnumLiteralDeclaration_2()); }
(	'by package and folder name' 
)
{ after(grammarAccess.getModuleMatchingParamenterAccess().getPAKCAGE_AND_FOLDEREnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getModuleMatchingParamenterAccess().getEXTERNAL_DEFINITIONEnumLiteralDeclaration_3()); }
(	'by external implementation' 
)
{ after(grammarAccess.getModuleMatchingParamenterAccess().getEXTERNAL_DEFINITIONEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GroupClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupClauseAccess().getNULLEnumLiteralDeclaration_0()); }
(	'$null' 
)
{ after(grammarAccess.getGroupClauseAccess().getNULLEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGroupClauseAccess().getONLYEnumLiteralDeclaration_1()); }
(	'only' 
)
{ after(grammarAccess.getGroupClauseAccess().getONLYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGroupClauseAccess().getONLY_THISEnumLiteralDeclaration_2()); }
(	'only-this' 
)
{ after(grammarAccess.getGroupClauseAccess().getONLY_THISEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PermissionClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPermissionClauseAccess().getMUSTEnumLiteralDeclaration_0()); }
(	'must' 
)
{ after(grammarAccess.getPermissionClauseAccess().getMUSTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPermissionClauseAccess().getCANEnumLiteralDeclaration_1()); }
(	'can' 
)
{ after(grammarAccess.getPermissionClauseAccess().getCANEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getPermissionClauseAccess().getCANNOTEnumLiteralDeclaration_2()); }
(	'cannot' 
)
{ after(grammarAccess.getPermissionClauseAccess().getCANNOTEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelactionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelactionTypeAccess().getACCESSEnumLiteralDeclaration_0()); }
(	'access' 
)
{ after(grammarAccess.getRelactionTypeAccess().getACCESSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getDECLAREEnumLiteralDeclaration_1()); }
(	'declare' 
)
{ after(grammarAccess.getRelactionTypeAccess().getDECLAREEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getHANDLEEnumLiteralDeclaration_2()); }
(	'handle' 
)
{ after(grammarAccess.getRelactionTypeAccess().getHANDLEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getEXTENDEnumLiteralDeclaration_3()); }
(	'extend' 
)
{ after(grammarAccess.getRelactionTypeAccess().getEXTENDEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getIMPLEMENTEnumLiteralDeclaration_4()); }
(	'implement' 
)
{ after(grammarAccess.getRelactionTypeAccess().getIMPLEMENTEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getCREATEEnumLiteralDeclaration_5()); }
(	'create' 
)
{ after(grammarAccess.getRelactionTypeAccess().getCREATEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getTHROWEnumLiteralDeclaration_6()); }
(	'throw' 
)
{ after(grammarAccess.getRelactionTypeAccess().getTHROWEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getUSEANOTATIONEnumLiteralDeclaration_7()); }
(	'use-annotation' 
)
{ after(grammarAccess.getRelactionTypeAccess().getUSEANOTATIONEnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getDEPENDEnumLiteralDeclaration_8()); }
(	'depend' 
)
{ after(grammarAccess.getRelactionTypeAccess().getDEPENDEnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getRelactionTypeAccess().getREQUIRESEnumLiteralDeclaration_9()); }
(	'requires' 
)
{ after(grammarAccess.getRelactionTypeAccess().getREQUIRESEnumLiteralDeclaration_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildCard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildCardAccess().getPackageEnumLiteralDeclaration_0()); }
(	'.*' 
)
{ after(grammarAccess.getWildCardAccess().getPackageEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getWildCardAccess().getPackageAndSubPackageEnumLiteralDeclaration_1()); }
(	'.**' 
)
{ after(grammarAccess.getWildCardAccess().getPackageAndSubPackageEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ASMLModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__0__Impl
	rule__ASMLModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getArchitectureKeyword_0()); }

	'architecture' 

{ after(grammarAccess.getASMLModelAccess().getArchitectureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__1__Impl
	rule__ASMLModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getNameAssignment_1()); }
(rule__ASMLModel__NameAssignment_1)
{ after(grammarAccess.getASMLModelAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__2__Impl
	rule__ASMLModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getASMLModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__3__Impl
	rule__ASMLModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getGroup_3()); }
(rule__ASMLModel__Group_3__0)?
{ after(grammarAccess.getASMLModelAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__4__Impl
	rule__ASMLModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getComponentsAssignment_4()); }
(rule__ASMLModel__ComponentsAssignment_4)*
{ after(grammarAccess.getASMLModelAccess().getComponentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__5__Impl
	rule__ASMLModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getGroup_5()); }
(rule__ASMLModel__Group_5__0)?
{ after(grammarAccess.getASMLModelAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getASMLModelAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ASMLModel__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_3__0__Impl
	rule__ASMLModel__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getImportKeyword_3_0()); }

	'import' 

{ after(grammarAccess.getASMLModelAccess().getImportKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_3__1__Impl
	rule__ASMLModel__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getImportURIAssignment_3_1()); }
(rule__ASMLModel__ImportURIAssignment_3_1)
{ after(grammarAccess.getASMLModelAccess().getImportURIAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getASMLModelAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASMLModel__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_5__0__Impl
	rule__ASMLModel__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getIgnoreKeyword_5_0()); }

	'ignore' 

{ after(grammarAccess.getASMLModelAccess().getIgnoreKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_5__1__Impl
	rule__ASMLModel__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getGroup_5_1()); }
(rule__ASMLModel__Group_5_1__0)*
{ after(grammarAccess.getASMLModelAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getSemicolonKeyword_5_2()); }

	';' 

{ after(grammarAccess.getASMLModelAccess().getSemicolonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASMLModel__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_5_1__0__Impl
	rule__ASMLModel__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getIgnoreAssignment_5_1_0()); }
(rule__ASMLModel__IgnoreAssignment_5_1_0)
{ after(grammarAccess.getASMLModelAccess().getIgnoreAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASMLModel__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASMLModel__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getCommaKeyword_5_1_1()); }
(
	',' 
)?
{ after(grammarAccess.getASMLModelAccess().getCommaKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__View__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__0__Impl
	rule__View__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getViewKeyword_0()); }

	'view' 

{ after(grammarAccess.getViewAccess().getViewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__1__Impl
	rule__View__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameAssignment_1()); }
(rule__View__NameAssignment_1)
{ after(grammarAccess.getViewAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__2__Impl
	rule__View__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__3__Impl
	rule__View__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getGroup_3()); }
(rule__View__Group_3__0)?
{ after(grammarAccess.getViewAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__4__Impl
	rule__View__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getComponentsAssignment_4()); }
(rule__View__ComponentsAssignment_4)*
{ after(grammarAccess.getViewAccess().getComponentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__5__Impl
	rule__View__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getRestrictionsAssignment_5()); }
(rule__View__RestrictionsAssignment_5)*
{ after(grammarAccess.getViewAccess().getRestrictionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getViewAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__View__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group_3__0__Impl
	rule__View__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getGroup_3_0()); }
(rule__View__Group_3_0__0)*
{ after(grammarAccess.getViewAccess().getGroup_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getSemicolonKeyword_3_1()); }

	';' 

{ after(grammarAccess.getViewAccess().getSemicolonKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__View__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group_3_0__0__Impl
	rule__View__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getAttributesKeyword_3_0_0()); }

	'attributes' 

{ after(grammarAccess.getViewAccess().getAttributesKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group_3_0__1__Impl
	rule__View__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getAttributesAssignment_3_0_1()); }
(rule__View__AttributesAssignment_3_0_1)
{ after(grammarAccess.getViewAccess().getAttributesAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getCommaKeyword_3_0_2()); }
(
	',' 
)?
{ after(grammarAccess.getViewAccess().getCommaKeyword_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
(rule__Attribute__NameAssignment_0)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
(rule__Attribute__ValueAssignment_2)
{ after(grammarAccess.getAttributeAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassMatching__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMatching__Group__0__Impl
	rule__ClassMatching__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMatching__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMatchingAccess().getExpressionMatchingAssignment_0()); }
(rule__ClassMatching__ExpressionMatchingAssignment_0)
{ after(grammarAccess.getClassMatchingAccess().getExpressionMatchingAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMatching__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMatching__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMatching__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMatchingAccess().getParameterAssignment_1()); }
(rule__ClassMatching__ParameterAssignment_1)
{ after(grammarAccess.getClassMatchingAccess().getParameterAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetaModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__0__Impl
	rule__MetaModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getNameAssignment_0()); }
(rule__MetaModule__NameAssignment_0)
{ after(grammarAccess.getMetaModuleAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__1__Impl
	rule__MetaModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMetaModuleAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__2__Impl
	rule__MetaModule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup_2()); }
(rule__MetaModule__Group_2__0)?
{ after(grammarAccess.getMetaModuleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__3__Impl
	rule__MetaModule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup_3()); }
(rule__MetaModule__Group_3__0)?
{ after(grammarAccess.getMetaModuleAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__4__Impl
	rule__MetaModule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup_4()); }
(rule__MetaModule__Group_4__0)?
{ after(grammarAccess.getMetaModuleAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__5__Impl
	rule__MetaModule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getComponentsAssignment_5()); }
(rule__MetaModule__ComponentsAssignment_5)*
{ after(grammarAccess.getMetaModuleAccess().getComponentsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__6__Impl
	rule__MetaModule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup_6()); }
(rule__MetaModule__Group_6__0)?
{ after(grammarAccess.getMetaModuleAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getMetaModuleAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__MetaModule__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_2__0__Impl
	rule__MetaModule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getGroup_2_0()); }
(rule__MetaModule__Group_2_0__0)*
{ after(grammarAccess.getMetaModuleAccess().getGroup_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MetaModule__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_2_0__0__Impl
	rule__MetaModule__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getAttributesKeyword_2_0_0()); }

	'attributes:' 

{ after(grammarAccess.getMetaModuleAccess().getAttributesKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_2_0__1__Impl
	rule__MetaModule__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getAttributesAssignment_2_0_1()); }
(rule__MetaModule__AttributesAssignment_2_0_1)
{ after(grammarAccess.getMetaModuleAccess().getAttributesAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getCommaKeyword_2_0_2()); }
(
	',' 
)?
{ after(grammarAccess.getMetaModuleAccess().getCommaKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetaModule__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_3__0__Impl
	rule__MetaModule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getMatchingKeyword_3_0()); }

	'matching:' 

{ after(grammarAccess.getMetaModuleAccess().getMatchingKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_3__1__Impl
	rule__MetaModule__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getMatchingAssignment_3_1()); }
(rule__MetaModule__MatchingAssignment_3_1)
{ after(grammarAccess.getMetaModuleAccess().getMatchingAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_3_2()); }

	';' 

{ after(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetaModule__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_4__0__Impl
	rule__MetaModule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getDescriptionKeyword_4_0()); }

	'description:' 

{ after(grammarAccess.getMetaModuleAccess().getDescriptionKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_4__1__Impl
	rule__MetaModule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getDescriptionAssignment_4_1()); }
(rule__MetaModule__DescriptionAssignment_4_1)
{ after(grammarAccess.getMetaModuleAccess().getDescriptionAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_4_2()); }

	';' 

{ after(grammarAccess.getMetaModuleAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetaModule__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_6__0__Impl
	rule__MetaModule__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getRestrictionsKeyword_6_0()); }

	'restrictions' 

{ after(grammarAccess.getMetaModuleAccess().getRestrictionsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_6__1__Impl
	rule__MetaModule__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getLeftCurlyBracketKeyword_6_1()); }

	'{' 

{ after(grammarAccess.getMetaModuleAccess().getLeftCurlyBracketKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_6__2__Impl
	rule__MetaModule__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getRestrictionsAssignment_6_2()); }
(rule__MetaModule__RestrictionsAssignment_6_2)*
{ after(grammarAccess.getMetaModuleAccess().getRestrictionsAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetaModule__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetaModule__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getRightCurlyBracketKeyword_6_3()); }

	'}' 

{ after(grammarAccess.getMetaModuleAccess().getRightCurlyBracketKeyword_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getID_ASMLTerminalRuleCall_0()); }
	RULE_ID_ASML
{ after(grammarAccess.getQualifiedNameAccess().getID_ASMLTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getID_ASMLTerminalRuleCall_1_1()); }
	RULE_ID_ASML
{ after(grammarAccess.getQualifiedNameAccess().getID_ASMLTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Restriction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__0__Impl
	rule__Restriction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroupClauseAssignment_0()); }
(rule__Restriction__GroupClauseAssignment_0)?
{ after(grammarAccess.getRestrictionAccess().getGroupClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__1__Impl
	rule__Restriction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getPermissionClauseAssignment_1()); }
(rule__Restriction__PermissionClauseAssignment_1)?
{ after(grammarAccess.getRestrictionAccess().getPermissionClauseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__2__Impl
	rule__Restriction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getRelactionTypeAssignment_2()); }
(rule__Restriction__RelactionTypeAssignment_2)
{ after(grammarAccess.getRestrictionAccess().getRelactionTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__3__Impl
	rule__Restriction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroupClauseBAssignment_3()); }
(rule__Restriction__GroupClauseBAssignment_3)?
{ after(grammarAccess.getRestrictionAccess().getGroupClauseBAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__4__Impl
	rule__Restriction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroup_4()); }
(rule__Restriction__Group_4__0)*
{ after(grammarAccess.getRestrictionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__5__Impl
	rule__Restriction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroup_5()); }
(rule__Restriction__Group_5__0)?
{ after(grammarAccess.getRestrictionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getRestrictionAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Restriction__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_4__0__Impl
	rule__Restriction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getComponentBAssignment_4_0()); }
(rule__Restriction__ComponentBAssignment_4_0)
{ after(grammarAccess.getRestrictionAccess().getComponentBAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getCommaKeyword_4_1()); }
(
	',' 
)?
{ after(grammarAccess.getRestrictionAccess().getCommaKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Restriction__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_5__0__Impl
	rule__Restriction__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMessageKeyword_5_0()); }

	'message' 

{ after(grammarAccess.getRestrictionAccess().getMessageKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Restriction__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Restriction__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMessageAssignment_5_1()); }
(rule__Restriction__MessageAssignment_5_1)
{ after(grammarAccess.getRestrictionAccess().getMessageAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentsBinRestrictionDeclareation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentsBinRestrictionDeclareation__Group__0__Impl
	rule__ComponentsBinRestrictionDeclareation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentsBinRestrictionDeclareation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAssignment_0()); }
(rule__ComponentsBinRestrictionDeclareation__ComponentBAssignment_0)
{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentsBinRestrictionDeclareation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComponentsBinRestrictionDeclareation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentsBinRestrictionDeclareation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getWildcardAssignment_1()); }
(rule__ComponentsBinRestrictionDeclareation__WildcardAssignment_1)?
{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getWildcardAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__ASMLModel__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getNameID_ASMLTerminalRuleCall_1_0()); }
	RULE_ID_ASML{ after(grammarAccess.getASMLModelAccess().getNameID_ASMLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__ImportURIAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getImportURISTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getASMLModelAccess().getImportURISTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__ComponentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getComponentsAbstractComponentParserRuleCall_4_0()); }
	ruleAbstractComponent{ after(grammarAccess.getASMLModelAccess().getComponentsAbstractComponentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASMLModel__IgnoreAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASMLModelAccess().getIgnoreSTRINGTerminalRuleCall_5_1_0_0()); }
	RULE_STRING{ after(grammarAccess.getASMLModelAccess().getIgnoreSTRINGTerminalRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameID_ASMLTerminalRuleCall_1_0()); }
	RULE_ID_ASML{ after(grammarAccess.getViewAccess().getNameID_ASMLTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__AttributesAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getAttributesAttributeParserRuleCall_3_0_1_0()); }
	ruleAttribute{ after(grammarAccess.getViewAccess().getAttributesAttributeParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__ComponentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getComponentsAbstractComponentParserRuleCall_4_0()); }
	ruleAbstractComponent{ after(grammarAccess.getViewAccess().getComponentsAbstractComponentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__RestrictionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getRestrictionsRestrictionParserRuleCall_5_0()); }
	ruleRestriction{ after(grammarAccess.getViewAccess().getRestrictionsRestrictionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameID_ASMLTerminalRuleCall_0_0()); }
	RULE_ID_ASML{ after(grammarAccess.getAttributeAccess().getNameID_ASMLTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ClassMatching__ExpressionMatchingAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMatchingAccess().getExpressionMatchingExpressionMatchingClauseEnumRuleCall_0_0()); }
	ruleExpressionMatchingClause{ after(grammarAccess.getClassMatchingAccess().getExpressionMatchingExpressionMatchingClauseEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMatching__ParameterAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMatchingAccess().getParameterSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getClassMatchingAccess().getParameterSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getNameID_ASMLTerminalRuleCall_0_0()); }
	RULE_ID_ASML{ after(grammarAccess.getMetaModuleAccess().getNameID_ASMLTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__AttributesAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getAttributesAttributeParserRuleCall_2_0_1_0()); }
	ruleAttribute{ after(grammarAccess.getMetaModuleAccess().getAttributesAttributeParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__MatchingAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getMatchingSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetaModuleAccess().getMatchingSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__DescriptionAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getDescriptionSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetaModuleAccess().getDescriptionSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__ComponentsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getComponentsAbstractComponentParserRuleCall_5_0()); }
	ruleAbstractComponent{ after(grammarAccess.getMetaModuleAccess().getComponentsAbstractComponentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaModule__RestrictionsAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaModuleAccess().getRestrictionsRestrictionParserRuleCall_6_2_0()); }
	ruleRestriction{ after(grammarAccess.getMetaModuleAccess().getRestrictionsRestrictionParserRuleCall_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__GroupClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroupClauseGroupClauseEnumRuleCall_0_0()); }
	ruleGroupClause{ after(grammarAccess.getRestrictionAccess().getGroupClauseGroupClauseEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__PermissionClauseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getPermissionClausePermissionClauseEnumRuleCall_1_0()); }
	rulePermissionClause{ after(grammarAccess.getRestrictionAccess().getPermissionClausePermissionClauseEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__RelactionTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getRelactionTypeRelactionTypeEnumRuleCall_2_0()); }
	ruleRelactionType{ after(grammarAccess.getRestrictionAccess().getRelactionTypeRelactionTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__GroupClauseBAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getGroupClauseBGroupClauseEnumRuleCall_3_0()); }
	ruleGroupClause{ after(grammarAccess.getRestrictionAccess().getGroupClauseBGroupClauseEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__ComponentBAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getComponentBComponentsBinRestrictionDeclareationParserRuleCall_4_0_0()); }
	ruleComponentsBinRestrictionDeclareation{ after(grammarAccess.getRestrictionAccess().getComponentBComponentsBinRestrictionDeclareationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Restriction__MessageAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictionAccess().getMessageSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getRestrictionAccess().getMessageSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentsBinRestrictionDeclareation__ComponentBAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAbstractComponentCrossReference_0_0()); }
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAbstractComponentQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAbstractComponentQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getComponentBAbstractComponentCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentsBinRestrictionDeclareation__WildcardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getWildcardWildCardEnumRuleCall_1_0()); }
	ruleWildCard{ after(grammarAccess.getComponentsBinRestrictionDeclareationAccess().getWildcardWildCardEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID_ASML : ('a'..'z'|'A'..'Z'|'_'|'.') ('a'..'z'|'A'..'Z'|'_'|'-'|'.'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


